// Mocks generated by Mockito 5.4.0 from annotations
// in times_up_flutter/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:cloud_firestore/cloud_firestore.dart' as _i14;
import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i15;
import 'package:firebase_messaging/firebase_messaging.dart' as _i8;
import 'package:flutter/material.dart' as _i16;
import 'package:flutter_local_notifications/flutter_local_notifications.dart'
    as _i7;
import 'package:geolocator/geolocator.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:times_up_flutter/models/child_model/child_model.dart' as _i3;
import 'package:times_up_flutter/models/email_model.dart' as _i13;
import 'package:times_up_flutter/models/notification_model/notification_model.dart'
    as _i12;
import 'package:times_up_flutter/services/app_usage_local_service.dart' as _i19;
import 'package:times_up_flutter/services/app_usage_service.dart' as _i11;
import 'package:times_up_flutter/services/auth.dart' as _i5;
import 'package:times_up_flutter/services/database.dart' as _i10;
import 'package:times_up_flutter/services/geo_locator_service.dart' as _i6;
import 'package:times_up_flutter/services/notification_service.dart' as _i20;
import 'package:times_up_flutter/sign_in/email_sign_in_bloc.dart' as _i17;
import 'package:times_up_flutter/sign_in/email_sign_in_model.dart' as _i18;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChildModel_1 extends _i1.SmartFake implements _i3.ChildModel {
  _FakeChildModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePosition_2 extends _i1.SmartFake implements _i4.Position {
  _FakePosition_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserMetadata_3 extends _i1.SmartFake implements _i2.UserMetadata {
  _FakeUserMetadata_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFactor_4 extends _i1.SmartFake implements _i2.MultiFactor {
  _FakeMultiFactor_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdTokenResult_5 extends _i1.SmartFake implements _i2.IdTokenResult {
  _FakeIdTokenResult_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_6 extends _i1.SmartFake
    implements _i2.UserCredential {
  _FakeUserCredential_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_7 extends _i1.SmartFake
    implements _i2.ConfirmationResult {
  _FakeConfirmationResult_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthBase_8 extends _i1.SmartFake implements _i5.AuthBase {
  _FakeAuthBase_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeoLocatorService_9 extends _i1.SmartFake
    implements _i6.GeoLocatorService {
  _FakeGeoLocatorService_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterLocalNotificationsPlugin_10 extends _i1.SmartFake
    implements _i7.FlutterLocalNotificationsPlugin {
  _FakeFlutterLocalNotificationsPlugin_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseMessaging_11 extends _i1.SmartFake
    implements _i8.FirebaseMessaging {
  _FakeFirebaseMessaging_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthBase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthBase extends _i1.Mock implements _i5.AuthBase {
  @override
  bool get isFirstLogin => (super.noSuchMethod(
        Invocation.getter(#isFirstLogin),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void setFirstLogin({bool? isFirstLogin}) => super.noSuchMethod(
        Invocation.method(
          #setFirstLogin,
          [],
          {#isFirstLogin: isFirstLogin},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<_i2.User> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue: _i9.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i9.Future<_i2.User>);
  @override
  _i9.Future<String> setToken() => (super.noSuchMethod(
        Invocation.method(
          #setToken,
          [],
        ),
        returnValue: _i9.Future<String>.value(''),
        returnValueForMissingStub: _i9.Future<String>.value(''),
      ) as _i9.Future<String>);
  @override
  _i9.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Stream<_i2.User?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i9.Stream<_i2.User?>.empty(),
        returnValueForMissingStub: _i9.Stream<_i2.User?>.empty(),
      ) as _i9.Stream<_i2.User?>);
  @override
  _i9.Future<_i2.User> signInWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i9.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #signInWithGoogle,
            [],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #signInWithGoogle,
            [],
          ),
        )),
      ) as _i9.Future<_i2.User>);
  @override
  _i9.Future<_i2.User> signInWithFacebook() => (super.noSuchMethod(
        Invocation.method(
          #signInWithFacebook,
          [],
        ),
        returnValue: _i9.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #signInWithFacebook,
            [],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #signInWithFacebook,
            [],
          ),
        )),
      ) as _i9.Future<_i2.User>);
  @override
  _i9.Future<_i2.User> signInWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i9.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [
              email,
              password,
            ],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i9.Future<_i2.User>);
  @override
  _i9.Future<_i2.User> signUpUserWithEmailAndPassword(
    String? email,
    String? password,
    String? name,
    String? surname,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpUserWithEmailAndPassword,
          [
            email,
            password,
            name,
            surname,
          ],
        ),
        returnValue: _i9.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #signUpUserWithEmailAndPassword,
            [
              email,
              password,
              name,
              surname,
            ],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #signUpUserWithEmailAndPassword,
            [
              email,
              password,
              name,
              surname,
            ],
          ),
        )),
      ) as _i9.Future<_i2.User>);
}

/// A class which mocks [Database].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabase extends _i1.Mock implements _i10.Database {
  @override
  _i9.Future<void> setChild(_i3.ChildModel? model) => (super.noSuchMethod(
        Invocation.method(
          #setChild,
          [model],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> liveUpdateChild(
    _i3.ChildModel? model,
    int? tick,
    _i11.AppUsageService? apps,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #liveUpdateChild,
          [
            model,
            tick,
            apps,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> updateChild(_i3.ChildModel? model) => (super.noSuchMethod(
        Invocation.method(
          #updateChild,
          [model],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> deleteChild(_i3.ChildModel? model) => (super.noSuchMethod(
        Invocation.method(
          #deleteChild,
          [model],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> deleteNotification(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteNotification,
          [id],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Stream<List<_i3.ChildModel>> childrenStream() => (super.noSuchMethod(
        Invocation.method(
          #childrenStream,
          [],
        ),
        returnValue: _i9.Stream<List<_i3.ChildModel>>.empty(),
        returnValueForMissingStub: _i9.Stream<List<_i3.ChildModel>>.empty(),
      ) as _i9.Stream<List<_i3.ChildModel>>);
  @override
  _i9.Stream<List<_i12.NotificationModel>> notificationStream(
          {String? childId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #notificationStream,
          [],
          {#childId: childId},
        ),
        returnValue: _i9.Stream<List<_i12.NotificationModel>>.empty(),
        returnValueForMissingStub:
            _i9.Stream<List<_i12.NotificationModel>>.empty(),
      ) as _i9.Stream<List<_i12.NotificationModel>>);
  @override
  _i9.Stream<_i3.ChildModel> childStream({required String? childId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #childStream,
          [],
          {#childId: childId},
        ),
        returnValue: _i9.Stream<_i3.ChildModel>.empty(),
        returnValueForMissingStub: _i9.Stream<_i3.ChildModel>.empty(),
      ) as _i9.Stream<_i3.ChildModel>);
  @override
  _i9.Future<void> setNotification(
    _i12.NotificationModel? notification,
    _i3.ChildModel? model,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setNotification,
          [
            notification,
            model,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> sendEmail({required _i13.EmailModel? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmail,
          [],
          {#email: email},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<_i3.ChildModel> getUserCurrentChild(
    String? key,
    _i11.AppUsageService? apps,
    _i14.GeoPoint? latLong, {
    String? battery,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserCurrentChild,
          [
            key,
            apps,
            latLong,
          ],
          {#battery: battery},
        ),
        returnValue: _i9.Future<_i3.ChildModel>.value(_FakeChildModel_1(
          this,
          Invocation.method(
            #getUserCurrentChild,
            [
              key,
              apps,
              latLong,
            ],
            {#battery: battery},
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i3.ChildModel>.value(_FakeChildModel_1(
          this,
          Invocation.method(
            #getUserCurrentChild,
            [
              key,
              apps,
              latLong,
            ],
            {#battery: battery},
          ),
        )),
      ) as _i9.Future<_i3.ChildModel>);
}

/// A class which mocks [GeoLocatorService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeoLocatorService extends _i1.Mock implements _i6.GeoLocatorService {
  @override
  _i4.LocationPermission get permission => (super.noSuchMethod(
        Invocation.getter(#permission),
        returnValue: _i4.LocationPermission.denied,
        returnValueForMissingStub: _i4.LocationPermission.denied,
      ) as _i4.LocationPermission);
  @override
  set permission(_i4.LocationPermission? _permission) => super.noSuchMethod(
        Invocation.setter(
          #permission,
          _permission,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Stream<_i4.Position> get getCurrentLocation => (super.noSuchMethod(
        Invocation.getter(#getCurrentLocation),
        returnValue: _i9.Stream<_i4.Position>.empty(),
        returnValueForMissingStub: _i9.Stream<_i4.Position>.empty(),
      ) as _i9.Stream<_i4.Position>);
  @override
  set getCurrentLocation(_i9.Stream<_i4.Position>? _getCurrentLocation) =>
      super.noSuchMethod(
        Invocation.setter(
          #getCurrentLocation,
          _getCurrentLocation,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<_i4.Position> getInitialLocation() => (super.noSuchMethod(
        Invocation.method(
          #getInitialLocation,
          [],
        ),
        returnValue: _i9.Future<_i4.Position>.value(_FakePosition_2(
          this,
          Invocation.method(
            #getInitialLocation,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i4.Position>.value(_FakePosition_2(
          this,
          Invocation.method(
            #getInitialLocation,
            [],
          ),
        )),
      ) as _i9.Future<_i4.Position>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i2.User {
  @override
  bool get emailVerified => (super.noSuchMethod(
        Invocation.getter(#emailVerified),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i2.UserMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeUserMetadata_3(
          this,
          Invocation.getter(#metadata),
        ),
        returnValueForMissingStub: _FakeUserMetadata_3(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i2.UserMetadata);
  @override
  List<_i2.UserInfo> get providerData => (super.noSuchMethod(
        Invocation.getter(#providerData),
        returnValue: <_i2.UserInfo>[],
        returnValueForMissingStub: <_i2.UserInfo>[],
      ) as List<_i2.UserInfo>);
  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i2.MultiFactor get multiFactor => (super.noSuchMethod(
        Invocation.getter(#multiFactor),
        returnValue: _FakeMultiFactor_4(
          this,
          Invocation.getter(#multiFactor),
        ),
        returnValueForMissingStub: _FakeMultiFactor_4(
          this,
          Invocation.getter(#multiFactor),
        ),
      ) as _i2.MultiFactor);
  @override
  _i9.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<String> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [forceRefresh],
        ),
        returnValue: _i9.Future<String>.value(''),
        returnValueForMissingStub: _i9.Future<String>.value(''),
      ) as _i9.Future<String>);
  @override
  _i9.Future<_i2.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdTokenResult,
          [forceRefresh],
        ),
        returnValue: _i9.Future<_i2.IdTokenResult>.value(_FakeIdTokenResult_5(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.IdTokenResult>.value(_FakeIdTokenResult_5(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
      ) as _i9.Future<_i2.IdTokenResult>);
  @override
  _i9.Future<_i2.UserCredential> linkWithCredential(
          _i2.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithCredential,
          [credential],
        ),
        returnValue: _i9.Future<_i2.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
      ) as _i9.Future<_i2.UserCredential>);
  @override
  _i9.Future<_i2.UserCredential> linkWithProvider(
          _i15.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithProvider,
          [provider],
        ),
        returnValue: _i9.Future<_i2.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
      ) as _i9.Future<_i2.UserCredential>);
  @override
  _i9.Future<_i2.UserCredential> reauthenticateWithProvider(
          _i15.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithProvider,
          [provider],
        ),
        returnValue: _i9.Future<_i2.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
      ) as _i9.Future<_i2.UserCredential>);
  @override
  _i9.Future<_i2.UserCredential> reauthenticateWithPopup(
          _i15.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithPopup,
          [provider],
        ),
        returnValue: _i9.Future<_i2.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
      ) as _i9.Future<_i2.UserCredential>);
  @override
  _i9.Future<void> reauthenticateWithRedirect(_i15.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithRedirect,
          [provider],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<_i2.UserCredential> linkWithPopup(_i15.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPopup,
          [provider],
        ),
        returnValue: _i9.Future<_i2.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
      ) as _i9.Future<_i2.UserCredential>);
  @override
  _i9.Future<void> linkWithRedirect(_i15.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithRedirect,
          [provider],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<_i2.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i2.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i9.Future<_i2.ConfirmationResult>.value(_FakeConfirmationResult_7(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.ConfirmationResult>.value(_FakeConfirmationResult_7(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i9.Future<_i2.ConfirmationResult>);
  @override
  _i9.Future<_i2.UserCredential> reauthenticateWithCredential(
          _i2.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithCredential,
          [credential],
        ),
        returnValue: _i9.Future<_i2.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
      ) as _i9.Future<_i2.UserCredential>);
  @override
  _i9.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> sendEmailVerification(
          [_i2.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailVerification,
          [actionCodeSettings],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<_i2.User> unlink(String? providerId) => (super.noSuchMethod(
        Invocation.method(
          #unlink,
          [providerId],
        ),
        returnValue: _i9.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
      ) as _i9.Future<_i2.User>);
  @override
  _i9.Future<void> updateEmail(String? newEmail) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [newEmail],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> updatePassword(String? newPassword) => (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> updatePhoneNumber(
          _i2.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneNumber,
          [phoneCredential],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDisplayName,
          [displayName],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> updatePhotoURL(String? photoURL) => (super.noSuchMethod(
        Invocation.method(
          #updatePhotoURL,
          [photoURL],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> updateProfile({
    String? displayName,
    String? photoURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #displayName: displayName,
            #photoURL: photoURL,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i2.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyBeforeUpdateEmail,
          [
            newEmail,
            actionCodeSettings,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [NavigatorObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigatorObserver extends _i1.Mock implements _i16.NavigatorObserver {
  @override
  void didPush(
    _i16.Route<dynamic>? route,
    _i16.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPush,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didPop(
    _i16.Route<dynamic>? route,
    _i16.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPop,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didRemove(
    _i16.Route<dynamic>? route,
    _i16.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didRemove,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didReplace({
    _i16.Route<dynamic>? newRoute,
    _i16.Route<dynamic>? oldRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #didReplace,
          [],
          {
            #newRoute: newRoute,
            #oldRoute: oldRoute,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didStartUserGesture(
    _i16.Route<dynamic>? route,
    _i16.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didStartUserGesture,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didStopUserGesture() => super.noSuchMethod(
        Invocation.method(
          #didStopUserGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EmailSignInBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmailSignInBloc extends _i1.Mock implements _i17.EmailSignInBloc {
  @override
  _i5.AuthBase get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeAuthBase_8(
          this,
          Invocation.getter(#auth),
        ),
        returnValueForMissingStub: _FakeAuthBase_8(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i5.AuthBase);
  @override
  _i9.Stream<_i18.EmailSignInModel> get modelStream => (super.noSuchMethod(
        Invocation.getter(#modelStream),
        returnValue: _i9.Stream<_i18.EmailSignInModel>.empty(),
        returnValueForMissingStub: _i9.Stream<_i18.EmailSignInModel>.empty(),
      ) as _i9.Stream<_i18.EmailSignInModel>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<void> submit() => (super.noSuchMethod(
        Invocation.method(
          #submit,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  void toggleFormType() => super.noSuchMethod(
        Invocation.method(
          #toggleFormType,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateEmail(String? email) => super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [email],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updatePassword(String? password) => super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [password],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateName(String? name) => super.noSuchMethod(
        Invocation.method(
          #updateName,
          [name],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateSurname(String? surname) => super.noSuchMethod(
        Invocation.method(
          #updateSurname,
          [surname],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateWith({
    String? email,
    String? password,
    String? name,
    String? surname,
    _i18.EmailSignInFormType? formType,
    bool? isLoading,
    bool? submitted,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #updateWith,
          [],
          {
            #email: email,
            #password: password,
            #name: name,
            #surname: surname,
            #formType: formType,
            #isLoading: isLoading,
            #submitted: submitted,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppUsage].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppUsage extends _i1.Mock implements _i19.AppUsage {}

/// A class which mocks [FireStoreDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFireStoreDatabase extends _i1.Mock implements _i10.FireStoreDatabase {
  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i5.AuthBase get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeAuthBase_8(
          this,
          Invocation.getter(#auth),
        ),
        returnValueForMissingStub: _FakeAuthBase_8(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i5.AuthBase);
  @override
  _i6.GeoLocatorService get geo => (super.noSuchMethod(
        Invocation.getter(#geo),
        returnValue: _FakeGeoLocatorService_9(
          this,
          Invocation.getter(#geo),
        ),
        returnValueForMissingStub: _FakeGeoLocatorService_9(
          this,
          Invocation.getter(#geo),
        ),
      ) as _i6.GeoLocatorService);
  @override
  set geo(_i6.GeoLocatorService? _geo) => super.noSuchMethod(
        Invocation.setter(
          #geo,
          _geo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.ChildModel get currentChild => (super.noSuchMethod(
        Invocation.getter(#currentChild),
        returnValue: _FakeChildModel_1(
          this,
          Invocation.getter(#currentChild),
        ),
        returnValueForMissingStub: _FakeChildModel_1(
          this,
          Invocation.getter(#currentChild),
        ),
      ) as _i3.ChildModel);
  @override
  _i9.Future<void> setChild(_i3.ChildModel? model) => (super.noSuchMethod(
        Invocation.method(
          #setChild,
          [model],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> updateChild(_i3.ChildModel? model) => (super.noSuchMethod(
        Invocation.method(
          #updateChild,
          [model],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setNotification(
    _i12.NotificationModel? notification,
    _i3.ChildModel? child,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setNotification,
          [
            notification,
            child,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> sendEmail({required _i13.EmailModel? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmail,
          [],
          {#email: email},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setTokenOnFireStore(Map<String, dynamic>? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #setTokenOnFireStore,
          [token],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> deleteChild(_i3.ChildModel? model) => (super.noSuchMethod(
        Invocation.method(
          #deleteChild,
          [model],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> deleteNotification(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteNotification,
          [id],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Stream<_i3.ChildModel> childStream({required String? childId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #childStream,
          [],
          {#childId: childId},
        ),
        returnValue: _i9.Stream<_i3.ChildModel>.empty(),
        returnValueForMissingStub: _i9.Stream<_i3.ChildModel>.empty(),
      ) as _i9.Stream<_i3.ChildModel>);
  @override
  _i9.Stream<List<_i12.NotificationModel>> notificationStream(
          {String? childId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #notificationStream,
          [],
          {#childId: childId},
        ),
        returnValue: _i9.Stream<List<_i12.NotificationModel>>.empty(),
        returnValueForMissingStub:
            _i9.Stream<List<_i12.NotificationModel>>.empty(),
      ) as _i9.Stream<List<_i12.NotificationModel>>);
  @override
  _i9.Stream<List<_i3.ChildModel>> childrenStream() => (super.noSuchMethod(
        Invocation.method(
          #childrenStream,
          [],
        ),
        returnValue: _i9.Stream<List<_i3.ChildModel>>.empty(),
        returnValueForMissingStub: _i9.Stream<List<_i3.ChildModel>>.empty(),
      ) as _i9.Stream<List<_i3.ChildModel>>);
  @override
  _i9.Future<void> liveUpdateChild(
    _i3.ChildModel? model,
    int? value,
    _i11.AppUsageService? apps,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #liveUpdateChild,
          [
            model,
            value,
            apps,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<_i3.ChildModel> getUserCurrentChild(
    String? key,
    _i11.AppUsageService? apps,
    _i14.GeoPoint? latLong, {
    String? battery,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserCurrentChild,
          [
            key,
            apps,
            latLong,
          ],
          {#battery: battery},
        ),
        returnValue: _i9.Future<_i3.ChildModel>.value(_FakeChildModel_1(
          this,
          Invocation.method(
            #getUserCurrentChild,
            [
              key,
              apps,
              latLong,
            ],
            {#battery: battery},
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i3.ChildModel>.value(_FakeChildModel_1(
          this,
          Invocation.method(
            #getUserCurrentChild,
            [
              key,
              apps,
              latLong,
            ],
            {#battery: battery},
          ),
        )),
      ) as _i9.Future<_i3.ChildModel>);
}

/// A class which mocks [NotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationService extends _i1.Mock
    implements _i20.NotificationService {
  @override
  _i7.FlutterLocalNotificationsPlugin get flutterLocalNotificationsPlugin =>
      (super.noSuchMethod(
        Invocation.getter(#flutterLocalNotificationsPlugin),
        returnValue: _FakeFlutterLocalNotificationsPlugin_10(
          this,
          Invocation.getter(#flutterLocalNotificationsPlugin),
        ),
        returnValueForMissingStub: _FakeFlutterLocalNotificationsPlugin_10(
          this,
          Invocation.getter(#flutterLocalNotificationsPlugin),
        ),
      ) as _i7.FlutterLocalNotificationsPlugin);
  @override
  _i8.FirebaseMessaging get messaging => (super.noSuchMethod(
        Invocation.getter(#messaging),
        returnValue: _FakeFirebaseMessaging_11(
          this,
          Invocation.getter(#messaging),
        ),
        returnValueForMissingStub: _FakeFirebaseMessaging_11(
          this,
          Invocation.getter(#messaging),
        ),
      ) as _i8.FirebaseMessaging);
  @override
  set messaging(_i8.FirebaseMessaging? _messaging) => super.noSuchMethod(
        Invocation.setter(
          #messaging,
          _messaging,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<void> localPlugin() => (super.noSuchMethod(
        Invocation.method(
          #localPlugin,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> configureFirebaseMessaging() => (super.noSuchMethod(
        Invocation.method(
          #configureFirebaseMessaging,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}
